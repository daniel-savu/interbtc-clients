initSidebarItems({"fn":[["execute_open_requests","Queries the parachain for open requests and executes them. It checks the bitcoin blockchain to see if a payment has already been made."],["listen_for_accept_replace","Listen for AcceptReplaceEvent directed at this vault and continue the replacement procedure by transferring bitcoin and calling execute_replace"],["listen_for_execute_replace","Listen for ExecuteReplaceEvent directed at this vault and continue the replacement procedure by transferring bitcoin and calling execute_replace"],["listen_for_issue_cancels","Listen for all `CancelIssueEvent`s."],["listen_for_issue_executes","Listen for ExecuteIssueEvent directed at this vault. Cancels the scheduled cancel_issue"],["listen_for_issue_requests","Listen for RequestIssueEvent directed at this vault. Schedules a cancellation of the received issue"],["listen_for_redeem_requests","Listen for RequestRedeemEvent directed at this vault; upon reception, transfer bitcoin and call execute_redeem"],["listen_for_refund_requests","Listen for RequestRefundEvent directed at this vault; upon reception, transfer bitcoin and call execute_refund"],["listen_for_replace_requests","Listen for RequestReplaceEvent, and attempt to accept it"],["listen_for_vaults_registered",""],["listen_for_wallet_updates",""],["maintain_collateralization_rate",""],["process_issue_requests","execute issue requests on best-effort (i.e. donâ€™t retry on error), returns an error if stream ends, otherwise runs forever"],["report_vault_thefts",""]],"struct":[["CancellationScheduler",""],["Config",""],["IssueCanceller",""],["ReplaceCanceller",""],["Runner","Runner implements the main loop for the relayer"]]});